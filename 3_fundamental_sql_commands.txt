1. List the commands for adding, updating, and deleting data.
    INSERT, UPDATE, DELETE
2. Explain the structure for each type of command.

3. What are some of the data types that can be used in tables? Give a real-world example of each type.
    money, text and date. These are all pretty self explanatory like money, text and dates exist in the real world and they're also datatypes that can be in your table, i'm not sure what I'm supposed to write here...
4. Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have first and last names, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).
    CREATE TABLE wedding (
        id integer,
        first_name text,
        last_name text,
        age integer,
        rsvp boolean,
        guests integer,
        meals float
    );

*Which data type would you use to store each of the following pieces of information?
    -First and last name.
        text
    -Whether they sent in their RSVP.
        boolean
    -Number of guests.
        integer
    -Number of meals.
        float
*Write a command that creates the table to track the wedding dinner.
    CREATE TABLE wedding (
        id integer,
        first_name text,
        last_name text,
        rsvp boolean,
        guests integer,
        meals float
    );

*Write a command that adds a column to track whether the guest sent a thank you card.
    ALTER TABLE wedding ADD COLUMN thank_you boolean;

*You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.
    ALTER TABLE wedding DROP COLUMN meals;

*The guests will need a place to sit at the reception, so write a command that adds a column for table number.
    ALTER TABLE wedding ADD COLUMN table_num integer;

*The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers from the database.
    ALTER TABLE wedding DROP COLUMN table_num;

5. Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.
    CREATE TABLE books (
        isbn integer,
        title text,
        author text, 
        genre text, 
        publishing_date date,
        total_copies integer,
        available_copies integer
    );

*Find three books and add their information to the table.
    INSERT INTO books (isbn, title, author, genre, publishing_date, total_copies, available_copies ) VALUES
    (0143116711, 'The Third Reich at War', 'Richard J. Evans', 'non-fiction', 02/23/2010, 1, 1),
    (9780132350884, 'Clean Code', 'Robert C. Martin', 'How To', 08/11/2008, 1, 0),
    (1594202869, 'Pox: An American History', 'Michael Willrich', 'non-fiction', 03/31/2011, 1, 1);

*Someone has just checked out one of the books. Change the number of available copies to 1 fewer.
    UPDATE books SET available_copies=0 WHERE isbn=0143116711;

*Now one of the books has been added to the banned books list. Remove it from the table.
    DELETE FROM books WHERE isbn=1594202869;

6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission, orbiting body, if it is currently operating, and its approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:
    CREATE TABLE spacecrafts (
        id integer, 
        name text,
        year_launched integer,
        country text,
        mission text,
        orbiting_body text,
        operating boolean,
        miles_from_earth integer
    );

*Add three non-Earth-orbiting satellites to the table.
    INSERT INTO spacecrafts (id, name, year_launched, country, mission, orbiting_body, operating, miles_from_earth) VALUES
    (001, 'Luna 10', 1966, 'Russia', 'Lunar Orbiter', 'Earth's Moon', false, 238,900),
    (002, 'Akatsuki', 2010, 'Japan', 'Venusian probe', 'Venus', true, 162,000,000),
    (003, '2001 Mars Odyssey', 2001, 'USA', 'Map the surface of Mars and act as a relay for the Curiosity rover', 'Mars', true, 33,900,000);

*Remove one of the satellites from the table since it has just crashed into the planet.
    DELETE from spacecrafts WHERE id=003;

*Edit another satellite because it is no longer operating and change the value to reflect that.
    UPDATE spacecrafts SET operating=false WHERE id=002;

7. Write a command to create a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not you have read the email, and the id of the email chain it's in. Also provide commands that perform the following operations:
    CREATE TABLE inbox (
        id integer, 
        subject_line text,
        sender text,
        cc text,
        body text,
        timestamp timestamp,
        read boolean,
        chain_id integer
    );

*Add three new emails to the inbox.
    INSERT INTO inbox (id, subject_line, sender, cc, body, timestamp, read, chain_id) VALUES
    (001, 'yooooooo', 'Caitlin', 'Ana', 'sup', '2019-06-14 14:40:00', true, 1001),
    (002, 'hi', 'Natalia', 'Richard', 'bye', '2018-04-13 14:36:00', false, 1002),
    (003, 'lunch?', 'Angie', 'Carly', 'Pittsfield cafe?', '2018-04-13 19:45:00', true, 1003);

*You deleted one of the emails, so write a command to remove the row from the inbox table.
    DELETE FROM inbox WHERE id=001;

*You started reading an email but just heard a crash in another room. Mark the email as unread before investigating the crash, so you can come back and read it later.
    UPDATE inbox SET read=false, WHERE id=003;